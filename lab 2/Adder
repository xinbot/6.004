*circuit for Lab#2 
.include "nominal.jsim"
.include "8clocks.jsim"
.include "lab2checkoff.jsim"

*2-input NAND: inputs are A and B, output is Z
.subckt nand2 a b z
MPD1 z a 1 0 NENH sw=8 sl=1
MPD2 1 b 0 0 NENH sw=8 sl=1
MPU1 z a vdd vdd PENH sw=8 sl=1
MPU2 z b vdd vdd PENH sw=8 sl=1
.ends

*2-input NOR:inputs are A and B, output is Z
.subckt nor2 a b z
MPD1 z a 0 0 NENH sw=8 sl=1
MPD2 z b 0 0 NENH sw=8 sl=1
MPU1 z a 1 vdd PENH sw=8 sl=1
MPU2 1 b vdd vdd PENH sw=8 sl=1
.ends

* INVERTER: input is A, output is Z
.subckt inv a z
MPD1 z a 0 0 NENH sw=16 sl=1
MPU1 z a vdd vdd PENH sw=16 sl=1
.ends

*2-input XOR:inputs are A and B, output is Z
.subckt xor2 a b z
XG a b c nor2
MUP1 1 a Vdd Vdd PENH sw=4 sl=1
MUP2 z c 1 Vdd PENH sw=4 sl=1
MUP3 1 b Vdd Vdd PENH sw=4 sl=1
MPD1 z a 3 0 NENH sw=2 sl=1
MPD2 3 b 0 0 NENH sw=2 sl=1
MPD3 z c 0 0 NENH sw=2 sl=1
.ends

*full-adder inputs are a b ci, outputs are co s
.subckt FA a b ci s co
Xxor1 a b 1 xor2
Xxor2 1 ci s xor2
Xnand1 a b 2 nand2
Xinv1 2 3 inv
Xnand2 a ci 4 nand2
Xinv2 4 5 inv
Xnand3 b ci 6 nand2
Xinv3 6 7 inv
Xnor1 3 5 8 nor2
Xinv4 8 9 inv
Xnor2 7 9 10 nor2
Xinv5 10 co inv
.ends

.subckt ADDER4 a3 a2 a1 a0 b3 b2 b1 b0 s4 s3 s2 s1 s0
*remember the node named "0" is the ground node
*nodes c0 through c3 are internal to the ADDER module
Xbit0 a0 b0 0 s0 c0 FA
Xbit1 a1 b1 c0 s1 c1 FA
Xbit2 a2 b2 c1 s2 c2 FA
Xbit3 a3 b3 c2 s3 s4 FA
.ends